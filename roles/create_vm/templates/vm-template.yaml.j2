{% set random_string= lookup('password', '/dev/null chars=ascii_lowercase,digits length=20') %}

apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: "{{ vm_name }}"
spec:
  dataVolumeTemplates:
  - apiVersion: cdi.kubevirt.io/v1beta1
    kind: DataVolume
    metadata:
      name: "{{ vm_name }}-{{ random_string }}"
    spec:
      sourceRef:
        kind: DataSource
        name: "{{ boot_source }}"
        namespace: openshift-virtualization-os-images
      storage:
        resources:
          requests:
            storage: "{{ root_volume_size|default('30') }}Gi"
{% if data_volumes is defined %}
{% for drive in data_volumes %}
  - metadata:
      name: '{{ vm_name }}-{{ drive.name }}'
    spec:
      pvc:
        resources:
          requests:
            storage: {{ drive.size }}
        #storageClassName: ocs-storagecluster-cephfs
        #storageClassName: ocs-storagecluster-ceph-rbd
        volumeMode: {{ volume_mode | default('Block') }}
        accessModes:
          - {{ access_mode } default('ReadWriteMany') }}
      source:
        blank: {}
  #- apiVersion: cdi.kubevirt.io/v1beta1
  #  metadata:
  #    name: {{ vm_name }}-{{ drive.name }}
  #  spec:
  #    pvc:
  #      volumeMode: Filesystem
  #      accessModes:
  #      - ReadWriteMany
  #      resources:
  #        requests:
  #          storage: {{ drive.size }}
  #    source: 
  #      blank: {}
{% endfor %}
{% endif %}
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/workload: server
      labels:
        kubevirt.io/domain: "{{ vm_name }}-{{ random_string }}"
        kubevirt.io/size: custom
    spec:
      domain:
        cpu:
          cores: {{ cores|default('1') }}
          sockets: {{ sockets|default('1') }}
          threads: {{ threads|default('1') }}
        devices:
          disks:
          - disk:
              bus: virtio
            name: "{{ vm_name }}-{{ random_string }}"
{% if data_volumes is defined %}
{% for drive in data_volumes %}
          - disk:
              bus: virtio
            name: "{{ vm_name }}-{{ drive.name }}"
{% endfor %}
{% endif %}
          - disk:
              bus: virtio
            name: cloudinitdisk
          interfaces:
          - masquerade: {}
            name: default
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel8.4.0
        resources:
          requests:
            memory: "{{ memory|default('2') }}Gi"
      evictionStrategy: LiveMigrate
      networks:
      - name: default
        pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
      - dataVolume:
          name: "{{ vm_name }}-{{ random_string }}"
        name: "{{ vm_name }}-{{ random_string }}"
{% if data_volumes is defined %}
{% for drive in data_volumes %}
      - persistentVolumeClaim:
          claimName: "{{ vm_name }}-{{ drive.name }}"
        name: "{{ vm_name }}-{{ drive.name }}"
{% endfor %}
{% endif %}
      - name: cloudinitdisk
        cloudInitNoCloud:
          userData: |-
{% if cloud_init is defined %}
            {{ cloud_init |indent( width=12, indentfirst=False) }}
{% elif cloud_init_secret is defined %}
            {{ cloud_init_secret |indent( width=8, indentfirst=False) }}
{% else %}
            #cloud-config
            user: "jamie"
            password: "{{ password|default('r3dh4t1!') }}"
            chpasswd: { expire: False }
{% endif %}
